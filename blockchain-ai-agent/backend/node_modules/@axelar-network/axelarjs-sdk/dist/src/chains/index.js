"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.loadChains = void 0;
const Axelar_1 = __importDefault(require("./Axelar"));
const Ethereum_1 = __importDefault(require("./Ethereum"));
const Avalanche_1 = __importDefault(require("./Avalanche"));
const Terra_1 = __importDefault(require("./Terra"));
const Fantom_1 = __importDefault(require("./Fantom"));
const Polygon_1 = __importDefault(require("./Polygon"));
const Moonbeam_1 = __importDefault(require("./Moonbeam"));
const Osmosis_1 = __importDefault(require("./Osmosis"));
const Cosmoshub_1 = __importDefault(require("./Cosmoshub"));
const Injective_1 = __importDefault(require("./Injective"));
const Juno_1 = __importDefault(require("./Juno"));
const assets_1 = require("../assets");
const clone_deep_1 = __importDefault(require("clone-deep"));
const Crescent_1 = __importDefault(require("./Crescent"));
const EMoney_1 = __importDefault(require("./EMoney"));
const Binance_1 = __importDefault(require("./Binance"));
const Kujira_1 = __importDefault(require("./Kujira"));
const Sei_1 = __importDefault(require("./Sei"));
const Secret_1 = __importDefault(require("./Secret"));
const Aurora_1 = __importDefault(require("./Aurora"));
const Fetch_1 = __importDefault(require("./Fetch"));
function loadChains(config) {
    const allAssets = (0, assets_1.loadAssets)(config);
    const _environment = config.environment;
    const rawChains = [
        new Aurora_1.default(),
        new Axelar_1.default(),
        new Avalanche_1.default(),
        new Binance_1.default(),
        new Cosmoshub_1.default(),
        new Crescent_1.default(),
        new Ethereum_1.default(),
        new EMoney_1.default(),
        new Fantom_1.default(),
        new Fetch_1.default(),
        new Injective_1.default(),
        new Juno_1.default(),
        new Kujira_1.default(),
        new Moonbeam_1.default(),
        new Osmosis_1.default(),
        new Polygon_1.default(),
        new Secret_1.default(),
        new Sei_1.default(),
        new Terra_1.default(),
    ];
    /*push assets to supported chains*/
    rawChains.forEach(({ chainInfo }) => {
        const filteredAssetList = allAssets.filter(({ chain_aliases }) => Object.keys(chain_aliases).indexOf(chainInfo.chainName.toLowerCase()) > -1);
        const assetsList = [];
        filteredAssetList.forEach((asset) => {
            const assetToPush = (0, clone_deep_1.default)(asset.chain_aliases[chainInfo.chainName.toLowerCase()]);
            assetToPush.common_key =
                asset.common_key[_environment === "local" ? "testnet" : _environment];
            assetToPush.native_chain = asset.native_chain;
            assetToPush.decimals = asset.decimals;
            assetToPush.fullySupported = asset.fully_supported;
            assetsList.push(assetToPush);
        });
        chainInfo.assets = assetsList;
    });
    return rawChains;
}
exports.loadChains = loadChains;
//# sourceMappingURL=index.js.map