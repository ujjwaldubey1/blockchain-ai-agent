"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _a, _b, _c, _d;
Object.defineProperty(exports, "__esModule", { value: true });
exports.AxelarGateway = void 0;
var ethers_1 = require("ethers");
var types_1 = require("./types");
var axelarGatewayAbi_json_1 = __importDefault(require("./abi/axelarGatewayAbi.json"));
var erc20Abi_json_1 = __importDefault(require("./abi/erc20Abi.json"));
var GatewayTx_1 = require("./GatewayTx");
var config = (_a = {},
    _a[types_1.Environment.MAINNET] = (_b = {},
        _b[types_1.EvmChain.ETHEREUM] = "0x4F4495243837681061C4743b74B3eEdf548D56A5",
        _b[types_1.EvmChain.AVALANCHE] = "0x5029C0EFf6C34351a0CEc334542cDb22c7928f78",
        _b[types_1.EvmChain.FANTOM] = "0x304acf330bbE08d1e512eefaa92F6a57871fD895",
        _b[types_1.EvmChain.POLYGON] = "0x6f015F16De9fC8791b234eF68D486d2bF203FBA8",
        _b[types_1.EvmChain.MOONBEAM] = "0x4F4495243837681061C4743b74B3eEdf548D56A5",
        _b),
    _a[types_1.Environment.TESTNET] = (_c = {},
        _c[types_1.EvmChain.ETHEREUM] = "0xBC6fcce7c5487d43830a219CA6E7B83238B41e71",
        _c[types_1.EvmChain.AVALANCHE] = "0xC249632c2D40b9001FE907806902f63038B737Ab",
        _c[types_1.EvmChain.FANTOM] = "0x97837985Ec0494E7b9C71f5D3f9250188477ae14",
        _c[types_1.EvmChain.POLYGON] = "0xBF62ef1486468a6bd26Dd669C06db43dEd5B849B",
        _c[types_1.EvmChain.MOONBEAM] = "0x5769D84DD62a6fD969856c75c7D321b84d455929",
        _c),
    _a[types_1.Environment.DEVNET] = (_d = {},
        _d[types_1.EvmChain.ETHEREUM] = "0x7358799e0c8250f0B7D1164824F6Dd5bA31C9Cd6",
        _d[types_1.EvmChain.AVALANCHE] = "0x4ffb57Aea2295d663B03810a5802ef2Bc322370D",
        _d[types_1.EvmChain.MOONBEAM] = "0x1b23BE90a16efe8fD3008E742dDd9531dC5845b0",
        _d),
    _a);
var AxelarGateway = /** @class */ (function () {
    /**
     * @param contractAddress axelar gateway's contract address.
     * @param provider evm provider to read value from the contract.
     */
    function AxelarGateway(contractAddress, provider) {
        this.provider = provider;
        this.contract = new ethers_1.ethers.Contract(contractAddress, axelarGatewayAbi_json_1.default, provider);
    }
    /**
     * A convinient method to create AxelarGateway instance from our gateway contract that currently deployed on mainnet and testnet.
     *
     * @param env This value will be used in pair with `chain` in order to find corresponding `AxelarGateway` contract address.
     * @param chain This value will be used in pair with `env` in order to find corresponding `AxelarGateway` contract address.
     * @param provider evm provider to read value from the contract.
     * @returns AxelarGateway instance
     */
    AxelarGateway.create = function (env, chain, provider) {
        return new AxelarGateway(config[env][chain], provider);
    };
    AxelarGateway.prototype.createCallContractTx = function (args) {
        return __awaiter(this, void 0, void 0, function () {
            var unsignedTx;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.contract.populateTransaction.callContract(args.destinationChain, args.destinationContractAddress, args.payload)];
                    case 1:
                        unsignedTx = _a.sent();
                        return [2 /*return*/, new GatewayTx_1.GatewayTx(unsignedTx, this.provider)];
                }
            });
        });
    };
    AxelarGateway.prototype.createCallContractWithTokenTx = function (args) {
        return __awaiter(this, void 0, void 0, function () {
            var unsignedTx;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.contract.populateTransaction.callContractWithToken(args.destinationChain, args.destinationContractAddress, args.payload, args.symbol, args.amount)];
                    case 1:
                        unsignedTx = _a.sent();
                        return [2 /*return*/, new GatewayTx_1.GatewayTx(unsignedTx, this.provider)];
                }
            });
        });
    };
    AxelarGateway.prototype.createSendTokenTx = function (args) {
        return __awaiter(this, void 0, void 0, function () {
            var unsignedTx;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.contract.populateTransaction.sendToken(args.destinationChain, args.destinationAddress, args.symbol, args.amount)];
                    case 1:
                        unsignedTx = _a.sent();
                        return [2 /*return*/, new GatewayTx_1.GatewayTx(unsignedTx, this.provider)];
                }
            });
        });
    };
    AxelarGateway.prototype.createApproveTx = function (args) {
        return __awaiter(this, void 0, void 0, function () {
            var tokenAddress, erc20Contract, unsignedTx;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        tokenAddress = args.tokenAddress;
                        erc20Contract = new ethers_1.ethers.Contract(tokenAddress, erc20Abi_json_1.default, this.provider);
                        return [4 /*yield*/, erc20Contract.populateTransaction.approve(this.contract.address, args.amount || ethers_1.ethers.constants.MaxUint256)];
                    case 1:
                        unsignedTx = _a.sent();
                        return [2 /*return*/, new GatewayTx_1.GatewayTx(unsignedTx, this.provider)];
                }
            });
        });
    };
    AxelarGateway.prototype.getAllowance = function (tokenAddress, signerAddress) {
        var erc20Contract = new ethers_1.ethers.Contract(tokenAddress, erc20Abi_json_1.default, this.provider);
        return erc20Contract.allowance(signerAddress, this.contract.address);
    };
    AxelarGateway.prototype.isTokenFrozen = function (symbol) {
        return this.contract.tokenFrozen(symbol);
    };
    AxelarGateway.prototype.isCommandExecuted = function (commandId) {
        return this.contract.isCommandExecuted(commandId);
    };
    AxelarGateway.prototype.getTokenAddress = function (symbol) {
        return this.contract.tokenAddresses(symbol);
    };
    AxelarGateway.prototype.getERC20TokenContract = function (tokenSymbol) {
        return __awaiter(this, void 0, void 0, function () {
            var _a, _b;
            return __generator(this, function (_c) {
                switch (_c.label) {
                    case 0:
                        _b = (_a = ethers_1.ethers.Contract).bind;
                        return [4 /*yield*/, this.getTokenAddress(tokenSymbol)];
                    case 1: return [2 /*return*/, new (_b.apply(_a, [void 0, _c.sent(), erc20Abi_json_1.default,
                            this.provider]))()];
                }
            });
        });
    };
    AxelarGateway.prototype.getContract = function () {
        return this.contract;
    };
    return AxelarGateway;
}());
exports.AxelarGateway = AxelarGateway;
//# sourceMappingURL=AxelarGateway.js.map